name: Generate Website Tests

on:
  repository_dispatch:
    types: [generate_tests]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Create test file
        run: |
          mkdir -p tests
          cat > tests/website.spec.ts << 'EOL'
          import { test, expect } from '@playwright/test';

          test.describe('Website Tests', () => {
            test('should load successfully', async ({ page }) => {
              await page.goto('${{ github.event.client_payload.url }}');
              await expect(page).toHaveTitle(/.*/);
            });

            test('should have visible content', async ({ page }) => {
              await page.goto('${{ github.event.client_payload.url }}');
              await expect(page.locator('body')).toBeVisible();
            });

            test('should not have console errors', async ({ page }) => {
              const errors = [];
              page.on('console', msg => {
                if (msg.type() === 'error') {
                  errors.push(msg.text());
                }
              });
              
              await page.goto('${{ github.event.client_payload.url }}');
              await page.waitForLoadState('networkidle');
              
              expect(errors).toHaveLength(0);
            });

            test('should have working navigation', async ({ page }) => {
              await page.goto('${{ github.event.client_payload.url }}');
              const links = await page.$$('a[href]');
              expect(links.length).toBeGreaterThan(0);
            });

            test('should have responsive design', async ({ page }) => {
              await page.goto('${{ github.event.client_payload.url }}');
              await page.setViewportSize({ width: 375, height: 667 });
              await expect(page.locator('body')).toBeVisible();
            });
          });
          EOL

      - name: Run tests
        run: npx playwright test --reporter=html,json
        
      - name: Upload test results
        run: |
          mkdir -p test-results
          cp playwright-report/results.json "test-results/$(echo '${{ github.event.client_payload.url }}' | sed 's/[^a-zA-Z0-9]/_/g').json"
          
      - name: Upload HTML report
        run: |
          mkdir -p reports
          cp -r playwright-report "reports/$(echo '${{ github.event.client_payload.url }}' | sed 's/[^a-zA-Z0-9]/_/g')"
          
      - name: Commit and push results
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add test-results reports
          git commit -m "Add test results for ${{ github.event.client_payload.url }}" || exit 0
          git push 